{"version":3,"sources":["hooks/useInputState.js","reducers/todoReducer.js","hooks/useLocalStorageState.js","contexts/ToDosContext.js","ToDoForm.js","EditForm.js","ToDoListItem.js","hooks/useToggle.js","ToDoList.js","ToDoApp.js","App.js","serviceWorker.js","index.js"],"names":["initialValue","useState","value","setValue","e","target","todoReducer","todos","action","type","id","uuidv4","task","complete","map","t","filter","useLocalStorageState","ToDosContext","createContext","initialTodos","ToDosProvider","props","useReducer","todosReducer","dispatch","Provider","children","withStyles","root","marginTop","classes","useInputState","newToDoInput","updateNewToDoInput","resetNewToDoInput","useContext","Paper","className","onSubmit","preventDefault","style","margin","padding","TextField","onChange","label","fullWidth","EditForm","toggleEditing","inputValue","updateInputValue","width","marginLeft","autoFocus","ToDoListItem","todo","initalValue","toggle","useToggle","editing","textDecoration","ListItem","height","key","Checkbox","checked","color","onClick","ListItemText","ListItemSecondaryAction","IconButton","aria-label","ToDoList","List","i","Fragment","length","Divider","ToDoApp","paddigTop","backgroundColor","AppBar","postion","Typography","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58ba5b10.chunk.js","sourcesContent":["import { useState } from \"react\";\nexport default initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst todoReducer = (todos, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...todos, { id: uuidv4(), task: action.task, complete: false }];\n    case \"TOGGLE\":\n      return todos.map(t =>\n        action.id !== t.id ? t : { ...t, complete: !t.complete }\n      );\n    case \"EDIT\":\n      return todos.map(t =>\n        t.id !== action.id ? t : { ...t, task: action.task }\n      );\n    case \"REMOVE\":\n      return todos.filter(t => action.id !== t.id);\n    default:\n      return todos;\n  }\n};\n\nexport default todoReducer;\n","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorageState(key, defaultVal) {\n  const [state, setState] = useState(() => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      val = defaultVal;\n    }\n    return val;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n  return [state, setState];\n}\n\nexport default useLocalStorageState;\n","import React, { createContext, useReducer } from \"react\";\nimport todosReducer from \"../reducers/todoReducer\";\nimport useToDoState from \"../hooks/useTodoState\";\n\nexport const ToDosContext = createContext();\n\nconst initialTodos = [\n  { id: 1, task: \"Learn About React Hooks\", complete: false },\n  {\n    id: 2,\n    task: \"Build To Do List Application using hooks\",\n    complete: false\n  },\n  { id: 3, task: \"Use Material UI Components\", complete: false },\n  { id: 4, task: \"Implment Responsive Material UI Grid\", complete: false }\n];\n\nexport default function ToDosProvider(props) {\n  const [todos, dispatch] = useReducer(todosReducer, initialTodos);\n\n  return (\n    <ToDosContext.Provider value={{ todos, dispatch }}>\n      {props.children}\n    </ToDosContext.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { TextField } from \"@material-ui/core/\";\nimport { Paper } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/styles/\";\nimport useInputState from \"./hooks/useInputState\";\nimport { ToDosContext } from \"./contexts/ToDosContext\";\n\nconst styles = {\n  root: {\n    marginTop: 64\n  }\n};\n\nfunction ToDoForm(props) {\n  const { classes } = props;\n  const [newToDoInput, updateNewToDoInput, resetNewToDoInput] = useInputState(\n    \"\"\n  );\n\n  const { dispatch } = useContext(ToDosContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({ type: \"ADD\", task: newToDoInput });\n    resetNewToDoInput();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          margin: \"1rem 0\",\n          padding: \"0 0.5rem\"\n        }}\n      >\n        <TextField\n          value={newToDoInput}\n          onChange={updateNewToDoInput}\n          label=\"Add new task\"\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(ToDoForm);\n","import React, { useContext } from \"react\";\nimport { TextField } from \"@material-ui/core/\";\nimport useInputState from \"./hooks/useInputState\";\nimport { ToDosContext } from \"./contexts/ToDosContext\";\n\nexport default function EditForm(props) {\n  const { task, id, toggleEditing } = props;\n  const { dispatch } = useContext(ToDosContext);\n  const [inputValue, updateInputValue] = useInputState(task);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({ type: \"EDIT\", task: inputValue, id: id });\n    toggleEditing();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: \"100%\", marginLeft: \"1rem\" }}>\n      <TextField\n        value={inputValue}\n        onChange={updateInputValue}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\n","import React, { useContext } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport useToggle from \"./hooks/useToggle\";\nimport EditForm from \"./EditForm\";\nimport { ToDosContext } from \"./contexts/ToDosContext\";\n\nexport default function ToDoListItem(props) {\n  const { id, task, complete } = props.todo;\n  const { dispatch } = useContext(ToDosContext);\n  const [editing, toggleEditing] = useToggle();\n\n  const handleCheck = () => {\n    dispatch({ type: \"TOGGLE\", id: id });\n  };\n\n  const handleDelete = () => {\n    dispatch({ type: \"REMOVE\", id: id });\n  };\n\n  const handleEditToggle = () => {\n    toggleEditing();\n  };\n\n  return (\n    <div\n      className=\"ToDoListItem\"\n      style={{ textDecoration: complete ? \"line-through\" : \"none\" }}\n    >\n      <ListItem style={{ height: \"64px\" }}>\n        {editing ? (\n          <EditForm\n            id={id}\n            key={id}\n            task={task}\n            toggleEditing={toggleEditing}\n          />\n        ) : (\n          <>\n            <Checkbox\n              checked={complete}\n              color=\"primary\"\n              onClick={handleCheck}\n            />\n\n            <ListItemText>{task}</ListItemText>\n\n            <ListItemSecondaryAction>\n              <IconButton onClick={handleEditToggle} aria-label=\"Edit To Do\">\n                <EditIcon />\n              </IconButton>\n\n              <IconButton onClick={handleDelete} aria-label=\"Delete To Do\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nexport default (initalValue = false) => {\n  const [value, setValue] = useState(initalValue);\n  const toggle = () => {\n    setValue(!value);\n  };\n  return [value, toggle];\n};\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ToDoListItem from \"./ToDoListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ToDosContext } from \"./contexts/ToDosContext\";\n\nexport default function ToDoList(props) {\n  const { todos } = useContext(ToDosContext);\n  return (\n    <Paper>\n      <List>\n        {todos.map((todo, i) => (\n          <React.Fragment key={i}>\n            <ToDoListItem todo={todo} key={todo.id} />\n            {i < todos.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ToDosProvider from \"./contexts/ToDosContext\";\n\nexport default function ToDoApp() {\n  return (\n    <Paper\n      style={{\n        paddigTop: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n    >\n      <AppBar color=\"primary\" postion=\"static\" style={{ height: \"64x\" }}>\n        <ToolBar>\n          <Typography color=\"inherit\">To Do App with React Hooks</Typography>\n        </ToolBar>\n      </AppBar>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ marginTop: \"2rem\" }}\n      >\n        <Grid item xs={11} sm={10} md={8} lg={6}>\n          <ToDosProvider>\n            <ToDoForm />\n            <ToDoList />\n          </ToDosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport ToDoApp from \"./ToDoApp\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}