{"version":3,"sources":["hooks/useInputState.ts","reducers/todoReducer.ts","hooks/useLocalStorageReducer.ts","hooks/useTodoState.ts","contexts/ToDosContext.tsx","ToDoForm.tsx","EditForm.tsx","ToDoListItem.tsx","hooks/useToggle.ts","ToDoList.tsx","ToDoApp.tsx","App.tsx","index.tsx"],"names":["useInputState","initialValue","useState","value","setValue","e","currentTarget","todoReducer","todos","action","type","id","uuidv4","task","complete","map","t","filter","useLocalStorageStateReducer","key","defaultVal","reducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","state","dispatch","useEffect","setItem","stringify","useTodoState","intialTodos","useLocalStorageReducer","todosReducer","initialTodos","ToDosContext","createContext","DispatchContext","ToDosProvider","children","console","log","Provider","withStyles","root","marginTop","classes","newToDoInput","updateNewToDoInput","resetNewToDoInput","useContext","Paper","className","onSubmit","preventDefault","style","margin","padding","TextField","onChange","label","fullWidth","EditForm","toggleEditing","inputValue","updateInputValue","width","marginLeft","autoFocus","memo","todo","initalValue","toggle","useToggle","editing","textDecoration","ListItem","height","Checkbox","checked","color","onClick","ListItemText","ListItemSecondaryAction","IconButton","aria-label","ToDoList","List","i","Fragment","length","Divider","ToDoApp","paddingTop","backgroundColor","AppBar","position","Typography","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59f34cff.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useInputState = (\n  initialValue: string\n): [string, (e: React.ChangeEvent<HTMLInputElement>) => void, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n\nexport default useInputState;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { Todos } from \"../types/types\";\n\nexport type Actions =\n  | { type: \"ADD\"; task: string }\n  | { type: \"TOGGLE\"; id: string }\n  | { type: \"EDIT\"; task: string; id: String }\n  | { type: \"REMOVE\"; id: string };\n\nconst todoReducer: React.Reducer<Todos, Actions> = (todos, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...todos, { id: uuidv4(), task: action.task, complete: false }];\n    case \"TOGGLE\":\n      return todos.map((t) =>\n        action.id !== t.id ? t : { ...t, complete: !t.complete }\n      );\n    case \"EDIT\":\n      return todos.map((t) =>\n        t.id !== action.id ? t : { ...t, task: action.task }\n      );\n    case \"REMOVE\":\n      return todos.filter((t) => action.id !== t.id);\n    default:\n      return todos;\n  }\n};\n\nexport default todoReducer;\n","import { useReducer, useEffect } from \"react\";\nimport { Todos } from \"../types/types\";\nimport { Actions } from \"./../reducers/todoReducer\";\n\nconst useLocalStorageStateReducer = (\n  key: string,\n  defaultVal: Todos,\n  reducer: React.Reducer<Todos, Actions>\n): [Todos, React.Dispatch<any>] => {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, dispatch];\n};\n\nexport default useLocalStorageStateReducer;\n","import { Todos } from \"../types/types\";\nimport todosReducer from \"../reducers/todoReducer\";\nimport useLocalStorageReducer from \"./useLocalStorageReducer\";\n\n// useTodoState returns state and dispatch function to manage todos. The useLocalStorageReducer syncs the state inand out of local storage\n\nconst useTodoState = (\n  intialTodos: Todos\n): { todos: Todos; dispatch: React.Dispatch<any> } => {\n  const [todos, dispatch] = useLocalStorageReducer(\n    \"todos\",\n    intialTodos,\n    todosReducer\n  );\n  return {\n    todos,\n    dispatch,\n  };\n};\nexport default useTodoState;\n","import React, { createContext } from \"react\";\nimport { Todos } from \"../types/types\";\nimport useTodoState from \"../hooks/useTodoState\";\n\nconst initialTodos: Todos = [\n  { id: \"1\", task: \"Learn About React Hooks\", complete: false },\n  {\n    id: \"2\",\n    task: \"Build To Do List Application using hooks\",\n    complete: false,\n  },\n  { id: \"3\", task: \"Use Material UI Components\", complete: false },\n  { id: \"4\", task: \"Implment Responsive Material UI Grid\", complete: false },\n];\n\nexport const ToDosContext = createContext<Todos>(initialTodos);\nexport const DispatchContext = createContext<React.Dispatch<any>>(() => {});\n\nconst ToDosProvider: React.FC = ({ children }) => {\n  const { todos, dispatch } = useTodoState(initialTodos);\n  console.log(todos);\n\n  return (\n    <ToDosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {children}\n      </DispatchContext.Provider>\n    </ToDosContext.Provider>\n  );\n};\n\nexport default ToDosProvider;\n","import React, { useContext } from \"react\";\nimport { TextField } from \"@material-ui/core/\";\nimport { Paper } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/styles/\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/ToDosContext\";\n\nconst styles = {\n  root: {\n    marginTop: 64,\n  },\n};\n\ntype Props = {\n  classes: any;\n};\n\nconst ToDoForm: React.FC<Props> = ({ classes }) => {\n  const [newToDoInput, updateNewToDoInput, resetNewToDoInput] = useInputState(\n    \"\"\n  );\n\n  const dispatch = useContext(DispatchContext);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"ADD\", task: newToDoInput });\n    resetNewToDoInput();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          margin: \"1rem 0\",\n          padding: \"0 0.5rem\",\n        }}\n      >\n        <TextField\n          value={newToDoInput}\n          onChange={updateNewToDoInput}\n          label=\"Add new task\"\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ToDoForm);\n","import React, { useContext } from \"react\";\nimport { TextField } from \"@material-ui/core/\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/ToDosContext\";\n\ntype Props = {\n  task: string;\n  id: string;\n  toggleEditing: () => void;\n};\n\nconst EditForm = ({ task, id, toggleEditing }: Props) => {\n  const dispatch = useContext(DispatchContext);\n  const [inputValue, updateInputValue] = useInputState(task);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch({ type: \"EDIT\", task: inputValue, id: id });\n    toggleEditing();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: \"100%\", marginLeft: \"1rem\" }}>\n      <TextField\n        value={inputValue}\n        onChange={updateInputValue}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n};\n\nexport default EditForm;\n","import React, { useContext, memo } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport useToggle from \"./hooks/useToggle\";\nimport EditForm from \"./EditForm\";\nimport { DispatchContext } from \"./contexts/ToDosContext\";\nimport { Todo } from \"./types/types\";\n\ntype Props = {\n  todo: Todo;\n};\n\nconst ToDoListItem: React.FC<Props> = ({ todo }) => {\n  const { id, task, complete } = todo;\n  const dispatch = useContext(DispatchContext);\n  const [editing, toggleEditing] = useToggle();\n\n  const handleCheck = () => {\n    dispatch({ type: \"TOGGLE\", id: id });\n  };\n\n  const handleDelete = () => {\n    dispatch({ type: \"REMOVE\", id: id });\n  };\n\n  const handleEditToggle = () => {\n    toggleEditing();\n  };\n\n  return (\n    <div\n      className=\"ToDoListItem\"\n      style={{ textDecoration: complete ? \"line-through\" : \"none\" }}\n    >\n      <ListItem style={{ height: \"64px\" }}>\n        {editing ? (\n          <EditForm\n            id={id}\n            key={id}\n            task={task}\n            toggleEditing={toggleEditing}\n          />\n        ) : (\n          <>\n            <Checkbox\n              checked={complete}\n              color=\"primary\"\n              onClick={handleCheck}\n            />\n\n            <ListItemText>{task}</ListItemText>\n\n            <ListItemSecondaryAction>\n              <IconButton onClick={handleEditToggle} aria-label=\"Edit To Do\">\n                <EditIcon />\n              </IconButton>\n\n              <IconButton onClick={handleDelete} aria-label=\"Delete To Do\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )}\n      </ListItem>\n    </div>\n  );\n};\n\nexport default memo(ToDoListItem);\n","import { useState } from \"react\";\n\nexport default (initalValue = false): [boolean, () => void] => {\n  const [value, setValue] = useState(initalValue);\n  const toggle = () => {\n    setValue(!value);\n  };\n  return [value, toggle];\n};\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ToDoListItem from \"./ToDoListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ToDosContext } from \"./contexts/ToDosContext\";\n\nconst ToDoList: React.FC = () => {\n  const todos = useContext(ToDosContext);\n  return (\n    <Paper>\n      <List>\n        {todos.map((todo, i) => (\n          <React.Fragment key={i}>\n            <ToDoListItem todo={todo} key={todo.id} />\n            {i < todos.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ToDosProvider from \"./contexts/ToDosContext\";\n\nconst ToDoApp: React.FC = () => {\n  return (\n    <Paper\n      style={{\n        paddingTop: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\",\n      }}\n    >\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64x\" }}>\n        <ToolBar>\n          <Typography color=\"inherit\">To Do App with React Hooks</Typography>\n        </ToolBar>\n      </AppBar>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ marginTop: \"2rem\" }}\n      >\n        <Grid item xs={11} sm={10} md={8} lg={6}>\n          <ToDosProvider>\n            <ToDoForm />\n            <ToDoList />\n          </ToDosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ToDoApp;\n","import React from \"react\";\nimport ToDoApp from \"./ToDoApp\";\n\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ToDoApp />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}